minimum(A){
    min = A[0]
    for i = 1 to A.length {
        if min > A[i] {
            min = A[i]
        }
    }
    return min
}

print(minimum([0, 1, 2]))

x = 1

while x < 10 do {
    x = x + 1
    if x < 5 {
        continue
    }
} 

repeat {
    x = x + 1
} until x == 15

print(x)
y = -3.4
print(floor(-y))


listInsert(L, x){
    x.next = L.head
    if L.head != 0 {
        L.head.prev = x
    }
    L.head = x
    x.prev = 0
    return x
}

let A be a new stack
let B be a new queue
let C be a new array
let D be a new hashtable


A.top

B.head

B.tail

list = newLinkedList([1, 2, 3, 4, 5])

print(listInsert(list, newLinkedList([6])).head.key)


Test(){
    return (1,2,3)
}

(e, f, g) = Test()
print(b)
